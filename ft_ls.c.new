#include "ft_ls.h"

t_arg		*new_arg()
{
	t_arg		*n;

	if ((n = malloc(sizeof(t_arg))) == 0)
		exit(42);
	n->next = 0;
	n->prev = 0;
	n->str = 0;
	return (n);
}

t_element	*new_element()
{
	t_element	*n;

	if ((n = malloc(sizeof(t_element))) == 0)
		exit(42);
	n->prev = 0
	n->next = 0;
	n->path = 0;
	return (n);
}
t_opt	init_opt(int argc, char **argv)
{
	int 	e;
	int 	d;
	t_opt	opt;
	t_arg	*arg;

	opt.arg = new_arg(0);
	arg = opt.arg;
	e = 1;
	d = 0;
	while (e < argc)
	{
		if (argv[e][0] == '-' && d == 0)
		{
			if (argv[e][1] == '\0')
			{
				opt.arg->
				opt.arg->str = ft_strdup("-");
				opt.arg->next = new_arg(0);
				opt.arg = opt.arg->next;
			}
			else
				opt.flag = putflag(opt.flag, argv[e]);
		}
		else
		{
			opt.arg->str = ft_strdup(argv[e]);
			opt.arg->next = new_arg(0);
			opt.arg = opt.arg->next;
			d = 1;
		}
		e++;
	}
	opt.arg = arg;
	return (opt);
}
int main(int argc, char **argv)
{
	t_opt opt;
	t_arg *arg;
	t_element *files;
	t_arg	*temp;

	opt = init_opt(argc, argv);
	if (opt.arg)
	{
		while (opt.arg)
		{
			process_elist(opt.arg->str, opt.flag, build_elist(opt.flag, opt.arg->str));
			if (opt.arg->prev == 0)
				temp = opt.arg;
			opt.arg = opt.arg->prev;
		}
	}
	else
		process_elist(".", opt.flag, build_elist(opt.flag, "."));
	while (1);
	exit(0);
}
